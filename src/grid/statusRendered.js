import React, { useState, useEffect } from 'react';

export const StatusRender = (params) => {

    const [activeIndex, setActiveIndex] = useState(0);

    useEffect(() => {
        const randomIndex = Math.floor(Math.random() * 4);
        setActiveIndex(randomIndex);
    }, []);

    if (params.value === "Summary") return null;

    const icons = [
        <svg xmlns="http://www.w3.org/2000/svg" id="Outline" viewBox="0 0 24 24" width="16" height="16">
        <path fill="#FFBF00" d="M22.829,9.172,18.95,5.293a1,1,0,0,0-1.414,1.414l3.879,3.879a2.057,2.057,0,0,1,.3.39c-.015,0-.027-.008-.042-.008h0L5.989,11a1,1,0,0,0,0,2h0l15.678-.032c.028,0,.051-.014.078-.016a2,2,0,0,1-.334.462l-3.879,3.879a1,1,0,1,0,1.414,1.414l3.879-3.879a4,4,0,0,0,0-5.656Z"/>
        <path fill="#FFBF00" d="M7,22H5a3,3,0,0,1-3-3V5A3,3,0,0,1,5,2H7A1,1,0,0,0,7,0H5A5.006,5.006,0,0,0,0,5V19a5.006,5.006,0,0,0,5,5H7a1,1,0,0,0,0-2Z"/>
    </svg>,
        <svg xmlns="http://www.w3.org/2000/svg" id="Outline" viewBox="0 0 24 24" width="16" height="16">
            <path fill="#FFBF00" stroke="#FFBF00" strokeWidth="1" d="m1.535,10.992c.238.001.443-.166.49-.399l.321-1.593h2.359l.328,1.597c.046.226.245.389.476.39.309.002.542-.282.481-.585l-1.27-6.291c-.093-.459-.359-.834-.711-1.003-.159-.077-.327-.115-.494-.115-.194,0-.386.052-.561.155-.324.191-.556.534-.636.932l-1.267,6.318c-.062.307.172.593.485.595Zm1.762-6.716c.024-.118.088-.223.163-.267.029-.017.048-.017.055-.017.017,0,.037.005.061.017.037.018.126.115.164.299l.759,3.692h-1.952l.75-3.724Zm16.203,3.724h1c1.379,0,2.5-1.122,2.5-2.5,0-.861-.438-1.622-1.102-2.071.371-.363.602-.87.602-1.429,0-1.103-.897-2-2-2h-1c-.827,0-1.5.673-1.5,1.5v5c0,.827.673,1.5,1.5,1.5Zm-.5-6.5c0-.276.225-.5.5-.5h1c.552,0,1,.449,1,1s-.448,1-1,1h-1.5v-1.5Zm0,2.5h1.5c.827,0,1.5.673,1.5,1.5s-.673,1.5-1.5,1.5h-1c-.275,0-.5-.224-.5-.5v-2.5Zm4.414,5.507L.414,13.507c-.271.047-.454.306-.406.578.042.243.253.415.491.415.029,0,.058-.002.087-.007l10.676-1.857-3.166,8.629c-.205.708-.072,1.495.346,2.052.326.434.798.683,1.293.683h4.531c.495,0,.967-.249,1.293-.683.418-.557.551-1.344.335-2.085l-3.244-8.837,10.936-1.902c.271-.047.454-.306.406-.578-.047-.273-.312-.453-.578-.407Zm-8.655,13.209c-.097.129-.262.283-.493.283h-4.531c-.231,0-.396-.154-.493-.283-.23-.307-.303-.767-.195-1.14l2.954-8.049,2.943,8.016c.118.406.046.867-.185,1.173Z"/>
        </svg>,
        <svg xmlns="http://www.w3.org/2000/svg" id="Layer_1" viewBox="0 0 24 24" width="16" height="16">
            <path fill="#FFBF00" stroke="#FFBF00" strokeWidth="1" d="m23.561,12.561l-3.75,3.75-.707-.707,3.604-3.604h-6.707c-1.93,0-3.5,1.57-3.5,3.5v8.5h-1v-4.5c0-1.93-1.57-3.5-3.5-3.5H1.293l3.604,3.604-.707.707-3.75-3.75c-.585-.585-.585-1.536,0-2.121l3.75-3.75.707.707-3.604,3.604h6.707c1.412,0,2.674.654,3.5,1.675V1.293l-3.604,3.604-.707-.707L10.939.439c.585-.585,1.536-.585,2.121,0l3.75,3.75-.707.707-3.604-3.604v11.382c.826-1.021,2.088-1.675,3.5-1.675h6.707l-3.604-3.604.707-.707,3.75,3.75c.585.585.585,1.536,0,2.121Z"/>
        </svg>,
         <svg xmlns="http://www.w3.org/2000/svg" id="Layer_1" viewBox="0 0 24 24" width="16" height="16">
         <path fill="#FFBF00" d="M21.713,24h2.156L14.859,1.661c-.511-1.024-1.54-1.661-2.684-1.661h-.002c-1.146,0-2.174,.638-2.711,1.724L.168,24H2.335l2.92-7h13.636l2.822,7ZM6.089,15L11.28,2.554c.172-.347,.507-.554,.894-.554h0c.387,0,.721,.207,.862,.481l5.047,12.519H6.089Z"/>
     </svg>
    ];

    const tooltips = [
        "Order in",
        "A-B book imbalance",
        "Rule enabled",
        "Order hedged check A Book"
    ];

    return (
    <span className="missionSpan" style={{ display: 'flex', gap: '5px' }}>
    {icons.map((icon, index) => (
        <span
            key={index}
            title={index === activeIndex ? tooltips[index] : null}
            style={{
                filter: index === activeIndex ? 'none' : 'grayscale(100%)',
                opacity: index === activeIndex ? 1 : 0.5,
                position: 'relative',
                cursor:'pointer'
            }} >
            {icon}
        </span>
    ))}
</span>

    );
};
